{"version":3,"sources":["components/Shared/Notifications.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","services/HttpClient.js","services/GeoService.js","components/Shared/Modal.js","components/Home/GetStartedMessage.js","pages/Home.js"],"names":["NotificationItem","props","React","createElement","className","theme","onClick","hideNotification","id","title","msg","Notifications","show","type","addNotification","success","duration","error","info","n","state","notifications","newNotificationKey","currentNotificationKey","setState","hideAfterDurationElapses","key","setTimeout","topStyle","window","pageYOffset","hide","this","el","map","notification","style","top","Component","Card","ref","classes","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","padding","paddingBottom","CardActions","_props$disableSpacing","disableSpacing","spacing","display","alignItems","marginLeft","HttpClient","fetchResponseHandler","response","ok","json","then","Promise","resolve","data","code","status","catch","err","statusText","message","getDataAuthenticated","url","token","a","fetch","method","headers","Accept","Authorization","getData","postData","postHeaders","length","body","JSON","stringify","GeoService","getCurrentIPAddress","client","ip","city","region_name","Modal","isOpen","modalStyle","position","left","transform","zIndex","background","width","height","marginTop","backdropStyle","containerClassName","children","noBackdrop","backdropClassName","e","preventDefault","onClose","close","GetStartedMessage","displayGetStarted","Grid","container","item","xs","locData","getstartedmessage","withRouter","useState","userSignedIn","setUserSignedIn","setLocData","modalDemoState","setModalDemoState","userIpAddressState","setUserIpAddressState","isLoadingState","setIsLoadingState","authService","AuthService","localizationService","LocalizationService","geoService","notificationsRef","useRef","useEffect","userHasSignedIn","locCode","getUserLocale","getLocalizedTextSet","locDataLoaded","loadLocalization","showNotification","current","showIpAddressUsingHttpClient","IpAddressDisplay","LoadingIndicator","size","homepagewelcome","authenticatedcontent","authenticatedcontentdescription","notificationsdescription","Button","color","modals","modalsdescription","view","welcome","services","serviceexampledescription","serviceexampletitle","forms","formsexampledescription","Link","to","formsexample"],"mappings":"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","file":"static/js/1.05525f06.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet defaultDurationMilliseconds = 5000; // ms\r\n/* React \"Toast\" Component which encapsulates a given popup style UI message - re-factored from https://github.com/k4wo/react-notify */\r\nfunction NotificationItem(props) {\r\n  const hideNotification = () => {\r\n    props.hideNotification(props.id);\r\n  };\r\n\r\n  return React.createElement(\r\n    'div',\r\n    { className: 'notification-item ' + props.theme, onClick: hideNotification },\r\n    React.createElement('p', { className: 'notification-title' }, props.title),\r\n    React.createElement('p', { className: 'notification-body' }, props.msg)\r\n  );\r\n}\r\n\r\n/* Notifications container - encapsulates collection of \"Toast\" style messages of various types (eg success, warning, error) */\r\n// NOTE: Cannot use stateless function here as a backing instance is required.\r\n// See https://reactjs.org/docs/components-and-props.html#stateless-functions\r\n// TODO: see if there is a way to convert this into functional component\r\n// to remove this and adhere to guidance on strong preference for functional components\r\nclass Notifications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentNotificationKey: 0, notifications: [] };\r\n  }\r\n\r\n  show = (msg, type) => {\r\n    this.addNotification('', msg, defaultDurationMilliseconds, type);\r\n  };\r\n\r\n  success = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, 'success');\r\n  };\r\n\r\n  error = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, 'error');\r\n  };\r\n\r\n  info = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, 'info');\r\n  };\r\n\r\n  addNotification = (title, msg, duration, type) => {\r\n    var n = this.state.notifications;\r\n    var newNotificationKey = this.state.currentNotificationKey;\r\n    newNotificationKey = newNotificationKey++;\r\n    n[newNotificationKey] = { title: title, msg: msg, duration: duration, theme: type };\r\n    this.setState({ currentNotificationKey: newNotificationKey, notifications: n });\r\n    this.hideAfterDurationElapses(duration, newNotificationKey);\r\n  };\r\n\r\n  hideAfterDurationElapses = (duration, key) => {\r\n    setTimeout(() => {\r\n      this.hideNotification(key);\r\n    }, duration);\r\n  };\r\n\r\n  hideNotification = (key) => {\r\n    var n = this.state.notifications;\r\n    delete n[key];\r\n    this.setState({ notifications: n });\r\n  };\r\n\r\n  render() {\r\n    var topStyle = window.pageYOffset + 'px';\r\n    var hide = this.hideNotification;\r\n    var el = this.state.notifications.map((notification, key) => {\r\n      return React.createElement(NotificationItem, {\r\n        id: key,\r\n        key: key,\r\n        theme: notification.theme,\r\n        hideNotification: hide,\r\n        title: notification.title,\r\n        msg: notification.msg\r\n      });\r\n    });\r\n    return React.createElement('div', { style: { top: topStyle }, className: 'notification-container' }, el);\r\n  }\r\n}\r\n\r\nexport default Notifications;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","/*\r\n\tEncapsulates all outbound http communication from the application to get/set data\r\n\tand forms\tthe basic building block and adaptor for http requests made by the application.\r\n\tAlso provides way to set auth headers needed by some requests\r\n*/\r\nconst HttpClient = () => {\r\n  const fetchResponseHandler = (response) => {\r\n    // Wraps fetch response and traps most errors and returns raw response as well.\r\n    // Ensures consisten response in form of:\r\n    // {data: [PAYLOADRETURNED_MAY_BE_JSON], code: response.status, response: response }\r\n    if (response.ok) {\r\n      return response\r\n        .json()\r\n        .then((json) => {\r\n          // the status was ok and there is a json body\r\n          return Promise.resolve({ data: json, code: response.status, response: response });\r\n        })\r\n        .catch((err) => {\r\n          // the status was ok but there is no json body\r\n          return Promise.resolve({ data: response, code: response.status, response: response });\r\n        });\r\n    } else {\r\n      return response\r\n        .json()\r\n        .catch((err) => {\r\n          // the status was not ok and there is no json body\r\n          return Promise.resolve({ data: response.statusText, code: response.status, response: response });\r\n        })\r\n        .then((json) => {\r\n          // the status was not ok but there is a json body\r\n          return Promise.resolve({ data: json.error.message, code: response.status, response: response });\r\n        });\r\n    }\r\n  };\r\n\r\n  // Modern fetch based methods to put into full use\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\r\n  const getDataAuthenticated = async (url, token) => {\r\n    return await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + token\r\n      }\r\n    }).then((response) => {\r\n      return fetchResponseHandler(response);\r\n    });\r\n  };\r\n\r\n  const getData = async (url) => {\r\n    return await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json'\r\n      }\r\n    }).then((response) => {\r\n      return fetchResponseHandler(response);\r\n    });\r\n  };\r\n\r\n  const postData = async (url, data = {}, token) => {\r\n    let postHeaders = {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    };\r\n    if (token && token.length) {\r\n      postHeaders['Authorization'] = 'Bearer ' + token;\r\n    }\r\n    return await fetch(url, {\r\n      method: 'POST',\r\n      headers: postHeaders,\r\n      body: JSON.stringify(data)\r\n    }).then((response) => {\r\n      return fetchResponseHandler(response);\r\n    });\r\n  };\r\n\r\n  return {\r\n    getData,\r\n    getDataAuthenticated,\r\n    postData\r\n  };\r\n};\r\n\r\nexport default HttpClient;\r\n","import HttpClient from 'services/HttpClient';\r\n\r\nconst GeoService = () => {\r\n  const getCurrentIPAddress = async () => {\r\n    const client = HttpClient();\r\n    let url = `https://freegeoip.app/json/`;\r\n    return await client.getData(url).then((response) => {\r\n      return {\r\n        ip: response.data.ip,\r\n        message: `Your ip is ${response.data.ip} and your location: ${response.data.city}, ${response.data.region_name} `\r\n      };\r\n    });\r\n  };\r\n\r\n  return {\r\n    getCurrentIPAddress\r\n  };\r\n};\r\n\r\nexport default GeoService;\r\n","import React from 'react';\r\n/* \r\nExample Usage:\r\n\r\n\t<button onClick={() => openModal()}>Open modal</button>\r\n\t<Modal isOpen={isModalOpen} onClose={() => closeModal()}>\r\n\t\t<h1>Modal title</h1>\r\n\t\t<p>hello</p>\r\n\t\t<p><button onClick={() => closeModal()}>Close</button></p>\r\n\t</Modal>\r\n*/\r\n\r\nfunction Modal(props) {\r\n  const close = (e) => {\r\n    e.preventDefault();\r\n    if (props.onClose) {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  if (props.isOpen === false) return null;\r\n\r\n  let modalStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: '9999',\r\n    background: '#ffffff',\r\n    padding: '10px'\r\n  };\r\n\r\n  if (props.width && props.height) {\r\n    modalStyle.width = props.width + 'px';\r\n    modalStyle.height = props.height + 'px';\r\n    modalStyle.marginLeft = '-' + props.width / 2 + 'px';\r\n    modalStyle.marginTop = '-' + props.height / 2 + 'px';\r\n    modalStyle.transform = null;\r\n  }\r\n\r\n  if (props.style) {\r\n    for (let key in props.style) {\r\n      modalStyle[key] = props.style[key];\r\n    }\r\n  }\r\n\r\n  let backdropStyle = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    top: '0px',\r\n    left: '0px',\r\n    zIndex: '9998',\r\n    background: 'rgba(0, 0, 0, 0.2)'\r\n  };\r\n\r\n  if (props.backdropStyle) {\r\n    for (let key in props.backdropStyle) {\r\n      backdropStyle[key] = props.backdropStyle[key];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={props.containerClassName}>\r\n      <div className={props.className} style={modalStyle}>\r\n        {props.children}\r\n      </div>\r\n      {!props.noBackdrop && (\r\n        <div\r\n          className={props.backdropClassName}\r\n          style={backdropStyle}\r\n          onClick={(e) => {\r\n            close(e);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction GetStartedMessage(props) {\r\n  if (props.displayGetStarted === false) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <p className=\"whitetext\">{props.locData.getstartedmessage}</p>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default GetStartedMessage;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n// material-ui\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\n// services\r\nimport AuthService from 'services/AuthService';\r\nimport LocalizationService from 'services/LocalizationService';\r\nimport GeoService from 'services/GeoService';\r\n// components\r\nimport Modal from 'components/Shared/Modal';\r\nimport Notifications from 'components/Shared/Notifications';\r\nimport LoadingIndicator from 'components/Shared/LoadingIndicator';\r\nimport GetStartedMessage from 'components/Home/GetStartedMessage';\r\n\r\nfunction Home() {\r\n  const [userSignedIn, setUserSignedIn] = useState(false);\r\n  const [locData, setLocData] = useState({});\r\n  const [modalDemoState, setModalDemoState] = useState(false);\r\n  const [userIpAddressState, setUserIpAddressState] = useState('');\r\n  const [isLoadingState, setIsLoadingState] = useState(false);\r\n\r\n  const authService = AuthService();\r\n  const localizationService = LocalizationService();\r\n  const geoService = GeoService();\r\n\r\n  const notificationsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let userHasSignedIn = authService.userHasSignedIn();\r\n    setUserSignedIn(userHasSignedIn);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function loadLocalization() {\r\n      const locCode = localizationService.getUserLocale();\r\n      const locDataLoaded = await localizationService.getLocalizedTextSet(\r\n        [\r\n          'welcome',\r\n          'homepagewelcome',\r\n          'getstartedmessage',\r\n          'notifications',\r\n          'notificationsdescription',\r\n          'modals',\r\n          'modalsdescription',\r\n          'error',\r\n          'success',\r\n          'view',\r\n          'close',\r\n          'authenticatedcontent',\r\n          'authenticatedcontentdescription',\r\n          'services',\r\n          'serviceexampletitle',\r\n          'serviceexampledescription',\r\n          'forms',\r\n          'formsexample',\r\n          'formsexampledescription'\r\n        ],\r\n        locCode\r\n      );\r\n      setLocData(locDataLoaded);\r\n    }\r\n    loadLocalization();\r\n  }, []);\r\n\r\n  const showNotification = (message, type) => {\r\n    notificationsRef.current.show(message, type);\r\n  };\r\n\r\n  const showIpAddressUsingHttpClient = async () => {\r\n    setUserIpAddressState('');\r\n    setIsLoadingState(true);\r\n    await geoService.getCurrentIPAddress().then((response) => {\r\n      if (response) {\r\n        setUserIpAddressState(response.message);\r\n        setIsLoadingState(false);\r\n      } else {\r\n        setUserIpAddressState('Error occurred');\r\n        setIsLoadingState(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const IpAddressDisplay = () => {\r\n    if (!isLoadingState && userIpAddressState.length > 0) {\r\n      return <p className=\"mt-2\">{userIpAddressState}</p>;\r\n    } else {\r\n      return <LoadingIndicator display={isLoadingState} size={20} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12} className=\"contentpanel-site\">\r\n        <h2>{locData.homepagewelcome}</h2>\r\n\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12}>\r\n            <GetStartedMessage locData={locData} displayGetStarted={true} />\r\n          </Grid>\r\n          <Grid item xs={12} className=\"pt-1\">\r\n            {userSignedIn && (\r\n              <Grid container>\r\n                <Grid item xs={12} className=\"pt-1\">\r\n                  <Card>\r\n                    <CardContent>\r\n                      <h4 className=\"card-title\">{locData.authenticatedcontent}</h4>\r\n                      <p>{locData.authenticatedcontentdescription}</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} className=\"pt-1 pb-1\">\r\n                <Card>\r\n                  <CardContent>\r\n                    <h4 className=\"card-title\">{locData.notifications}</h4>\r\n                    <p>{locData.notificationsdescription}</p>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button\r\n                      className=\"ml-2\"\r\n                      color=\"secondary\"\r\n                      onClick={() => showNotification(locData.success, 'success')}\r\n                    >\r\n                      {locData.success}\r\n                    </Button>\r\n                    <Button className=\"ml-2\" color=\"secondary\" onClick={() => showNotification(locData.error, 'error')}>\r\n                      {locData.error}\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} className=\"pt-1\">\r\n                <Card className=\"card white-bg-color bl-1 bb-1\">\r\n                  <CardContent>\r\n                    <h4 className=\"card-title\">{locData.modals}</h4>\r\n                    <p>{locData.modalsdescription}</p>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button className=\"ml-2\" color=\"secondary\" onClick={() => setModalDemoState(true)}>\r\n                      {locData.view}\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n\r\n                <Modal isOpen={modalDemoState} onClose={() => setModalDemoState(false)}>\r\n                  <h1>{locData.welcome}</h1>\r\n                  <p>{locData.homepagewelcome}</p>\r\n                  <Button color=\"secondary\" onClick={() => setModalDemoState(false)}>\r\n                    {locData.close}\r\n                  </Button>\r\n                </Modal>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} className=\"pt-1\">\r\n                <Card>\r\n                  <CardContent>\r\n                    <h4 className=\"card-title\">{locData.services}</h4>\r\n                    <p>{locData.serviceexampledescription}</p>\r\n                    <Button className=\"mt-3\" color=\"secondary\" onClick={showIpAddressUsingHttpClient}>\r\n                      {locData.serviceexampletitle}\r\n                    </Button>\r\n                    <IpAddressDisplay />\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} className=\"pt-1\">\r\n                <Card>\r\n                  <CardContent>\r\n                    <h4 className=\"card-title\">{locData.forms}</h4>\r\n                    <p>{locData.formsexampledescription}</p>\r\n                    <Button className=\"mt-3\" color=\"secondary\" component={Link} to=\"/contact/testnameparam\">\r\n                      {locData.formsexample}\r\n                    </Button>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Notifications ref={notificationsRef} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Home);\r\n"],"sourceRoot":""}