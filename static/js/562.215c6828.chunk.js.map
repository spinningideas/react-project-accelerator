{"version":3,"file":"static/js/562.215c6828.chunk.js","mappings":"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","sources":["components/Shared/Notifications.js","pages/Contact.js"],"sourcesContent":["import React from \"react\";\r\n\r\nlet defaultDurationMilliseconds = 5000; // ms\r\n/* React \"Toast\" Component which encapsulates a given popup style UI message - re-factored from https://github.com/k4wo/react-notify */\r\nfunction NotificationItem(props) {\r\n  const hideNotification = () => {\r\n    props.hideNotification(props.id);\r\n  };\r\n\r\n  return React.createElement(\r\n    \"div\",\r\n    {\r\n      className: \"notification-item \" + props.theme,\r\n      onClick: hideNotification,\r\n    },\r\n    React.createElement(\"p\", { className: \"notification-title\" }, props.title),\r\n    React.createElement(\"p\", { className: \"notification-body\" }, props.msg)\r\n  );\r\n}\r\n\r\n/* Notifications container - encapsulates collection of \"Toast\" style messages of various types (eg success, warning, error) */\r\n// NOTE: Cannot use stateless function here as a backing instance is required.\r\n// See https://reactjs.org/docs/components-and-props.html#stateless-functions\r\n// TODO: see if there is a way to convert this into functional component\r\n// to remove this and adhere to guidance on strong preference for functional components\r\nclass Notifications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentNotificationKey: 0, notifications: [] };\r\n  }\r\n\r\n  show = (msg, type) => {\r\n    this.addNotification(\"\", msg, defaultDurationMilliseconds, type);\r\n  };\r\n\r\n  success = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, \"success\");\r\n  };\r\n\r\n  error = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, \"error\");\r\n  };\r\n\r\n  info = (title, msg, duration) => {\r\n    this.addNotification(title, msg, duration, \"info\");\r\n  };\r\n\r\n  addNotification = (title, msg, duration, type) => {\r\n    var n = this.state.notifications;\r\n    var newNotificationKey = this.state.currentNotificationKey;\r\n    newNotificationKey = newNotificationKey++;\r\n    n[newNotificationKey] = {\r\n      title: title,\r\n      msg: msg,\r\n      duration: duration,\r\n      theme: type,\r\n    };\r\n    this.setState({\r\n      currentNotificationKey: newNotificationKey,\r\n      notifications: n,\r\n    });\r\n    this.hideAfterDurationElapses(duration, newNotificationKey);\r\n  };\r\n\r\n  hideAfterDurationElapses = (duration, key) => {\r\n    setTimeout(() => {\r\n      this.hideNotification(key);\r\n    }, duration);\r\n  };\r\n\r\n  hideNotification = (key) => {\r\n    var n = this.state.notifications;\r\n    delete n[key];\r\n    this.setState({ notifications: n });\r\n  };\r\n\r\n  render() {\r\n    var topStyle = window.pageYOffset + \"px\";\r\n    var hide = this.hideNotification;\r\n    var el = this.state.notifications.map((notification, key) => {\r\n      return React.createElement(NotificationItem, {\r\n        id: key,\r\n        key: key,\r\n        theme: notification.theme,\r\n        hideNotification: hide,\r\n        title: notification.title,\r\n        msg: notification.msg,\r\n      });\r\n    });\r\n    return React.createElement(\r\n      \"div\",\r\n      { style: { top: topStyle }, className: \"notification-container\" },\r\n      el\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notifications;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n// forms\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { TextField } from \"formik-mui\";\r\n// material-ui\r\nimport Button from \"@mui/material/Button\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Grid from \"@mui/material/Grid\";\r\n// shared components\r\nimport Notifications from \"components/Shared/Notifications\";\r\n// services\r\nimport LocalizationService from \"services/LocalizationService\";\r\n\r\nexport default function Contact(props) {\r\n  const [locData, setLocData] = useState({});\r\n  const [formIsSubmitting, setFormIsSubmitting] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name:\r\n      props.match && props.match.params && props.match.params.name\r\n        ? props.match.params.name\r\n        : \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const localizationService = LocalizationService();\r\n\r\n  const notificationsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    async function loadLocalization() {\r\n      const locCode = localizationService.getUserLocale();\r\n\r\n      const locDataLoaded = await localizationService.getLocalizedTextSet(\r\n        [\r\n          \"contact\",\r\n          \"contactdescription\",\r\n          \"moreinfo\",\r\n          \"save\",\r\n          \"name\",\r\n          \"email\",\r\n          \"message\",\r\n          \"messagedescription\",\r\n          \"required\",\r\n          \"success\",\r\n        ],\r\n        locCode\r\n      );\r\n      setLocData(locDataLoaded);\r\n    }\r\n    loadLocalization();\r\n  }, []);\r\n\r\n  const styles = {\r\n    formField: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      margin: 1,\r\n      width: 500,\r\n    },\r\n  };\r\n\r\n  const showNotification = (message, type) => {\r\n    notificationsRef.current.show(message, type);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <h3>{locData.contact}</h3>\r\n        <p>{locData.contactdescription}</p>\r\n\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} md={12} lg={12} xl={12}>\r\n            <Formik\r\n              initialValues={formData}\r\n              validate={(values) => {\r\n                const errors = {};\r\n                if (!values.name) {\r\n                  errors.name = locData.required;\r\n                }\r\n                if (!values.email) {\r\n                  errors.email = locData.required;\r\n                } else if (\r\n                  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(\r\n                    values.email\r\n                  )\r\n                ) {\r\n                  errors.email = \"Invalid email address\";\r\n                }\r\n                if (!values.message) {\r\n                  errors.message = locData.required;\r\n                }\r\n                return errors;\r\n              }}\r\n              onSubmit={(values) => {\r\n                setFormIsSubmitting(false);\r\n                showNotification(locData.success, \"success\");\r\n                setFormData({\r\n                  name: values.name,\r\n                  email: values.email,\r\n                  message: values.message,\r\n                });\r\n              }}\r\n            >\r\n              {({ submitForm }) => (\r\n                <Form>\r\n                  <Card>\r\n                    <CardContent sx={{ p: 0 }}>\r\n                      <Field\r\n                        sx={styles.formField}\r\n                        component={TextField}\r\n                        variant=\"standard\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        label={locData.name}\r\n                        required\r\n                      />\r\n\r\n                      <Field\r\n                        sx={styles.formField}\r\n                        component={TextField}\r\n                        variant=\"standard\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        label={locData.email}\r\n                        required\r\n                      />\r\n\r\n                      <Field\r\n                        sx={styles.formField}\r\n                        type=\"text\"\r\n                        component={TextField}\r\n                        variant=\"standard\"\r\n                        name=\"message\"\r\n                        label={locData.message}\r\n                        required\r\n                        multiline\r\n                        rows={4}\r\n                      />\r\n                    </CardContent>\r\n                    <CardActions>\r\n                      <Button\r\n                        className=\"ml-2\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        disabled={formIsSubmitting}\r\n                        onClick={submitForm}\r\n                      >\r\n                        {locData.save}\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Notifications ref={notificationsRef} />\r\n    </Grid>\r\n  );\r\n}\r\n"],"names":["NotificationItem","props","React","className","theme","onClick","hideNotification","id","title","msg","Notifications","show","type","addNotification","success","duration","error","info","n","state","notifications","newNotificationKey","currentNotificationKey","setState","hideAfterDurationElapses","key","setTimeout","topStyle","window","pageYOffset","hide","this","el","map","notification","style","top","Contact","useState","locData","setLocData","formIsSubmitting","setFormIsSubmitting","name","match","params","email","message","formData","setFormData","localizationService","LocalizationService","notificationsRef","useRef","useEffect","locCode","getUserLocale","getLocalizedTextSet","locDataLoaded","loadLocalization","styles","formField","display","flexDirection","margin","width","container","spacing","item","xs","contact","contactdescription","md","lg","xl","initialValues","validate","values","errors","required","test","onSubmit","current","submitForm","sx","p","component","TextField","variant","label","multiline","rows","color","disabled","save","ref"],"sourceRoot":""}