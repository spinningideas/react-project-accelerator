{"version":3,"file":"static/js/918.b1b813bd.chunk.js","mappings":"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","sources":["services/HttpClient.ts","services/GeoService.ts","hooks/useWindow.ts","components/Shared/SlideTransition.tsx","components/Shared/ModalDialog.tsx","components/Home/GetStartedMessage.tsx","pages/Home.tsx","services/NotificationsService.ts","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["/*\r\n\tEncapsulates all outbound http communication from the application to get/set data\r\n\tand forms\tthe basic building block and adaptor for http requests made by the application.\r\n\tAlso provides way to set auth headers needed by some requests\r\n*/\r\nconst HttpClient = () => {\r\n  const fetchResponseHandler = (response) => {\r\n    // Wraps fetch response and traps most errors and returns raw response as well.\r\n    // Ensures consisten response in form of:\r\n    // {data: [PAYLOADRETURNED_MAY_BE_JSON], code: response.status, response: response }\r\n    if (response.ok) {\r\n      return response\r\n        .json()\r\n        .then((json) => {\r\n          // the status was ok and there is a json body\r\n          return Promise.resolve({\r\n            data: json,\r\n            code: response.status,\r\n            response: response,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          // the status was ok but there is no json body\r\n          return Promise.resolve({\r\n            data: response,\r\n            code: response.status,\r\n            response: response,\r\n          });\r\n        });\r\n    } else {\r\n      return response\r\n        .json()\r\n        .catch(() => {\r\n          // the status was not ok and there is no json body\r\n          return Promise.resolve({\r\n            data: response.statusText,\r\n            code: response.status,\r\n            response: response,\r\n          });\r\n        })\r\n        .then((json) => {\r\n          // the status was not ok but there is a json body\r\n          return Promise.resolve({\r\n            data: json.error.message,\r\n            code: response.status,\r\n            response: response,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  // Modern fetch based methods to put into full use\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\r\n  const getDataAuthenticated = async (url, token) => {\r\n    return await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }).then((response) => {\r\n      return fetchResponseHandler(response);\r\n    });\r\n  };\r\n\r\n  const getData = async (url) => {\r\n    return await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    }).then((response) => {\r\n      return fetchResponseHandler(response);\r\n    });\r\n  };\r\n\r\n  const postData = async (url, data = {}, token) => {\r\n    let postHeaders = {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    if (token && token.length) {\r\n      postHeaders[\"Authorization\"] = \"Bearer \" + token;\r\n    }\r\n    return await fetch(url, {\r\n      method: \"POST\",\r\n      headers: postHeaders,\r\n      body: JSON.stringify(data),\r\n    }).then((response) => {\r\n      return fetchResponseHandler(response);\r\n    });\r\n  };\r\n\r\n  return {\r\n    getData,\r\n    getDataAuthenticated,\r\n    postData,\r\n  };\r\n};\r\n\r\nexport default HttpClient;\r\n","import HttpClient from \"services/HttpClient\";\r\nimport GeoServiceLocation from \"models/GeoServiceLocation\";\r\n\r\n/* See: https://ipwhois.io/documentation */\r\nconst GeoService = () => {\r\n  const getCurrentIPAddress = async (): Promise<GeoServiceLocation> => {\r\n    const client = HttpClient();\r\n    let url = \"https://ipwho.is/\";\r\n    return await client.getData(url).then((response) => {\r\n      let geoResult = response.data;\r\n\r\n      let location = {\r\n        ip: response.data.ip,\r\n        city: geoResult.city,\r\n        region: geoResult.region,\r\n        country: geoResult.country,\r\n        latitude: geoResult.latitude,\r\n        longitude: geoResult.longitude,\r\n        message: `Your ip is ${geoResult.ip} and your location: ${geoResult.latitude}, ${geoResult.longitude} which is in ${geoResult.city}, ${geoResult.region} ${geoResult.country}`,\r\n      } as GeoServiceLocation;\r\n\r\n      return location;\r\n    });\r\n  };\r\n\r\n  return {\r\n    getCurrentIPAddress,\r\n  };\r\n};\r\n\r\nexport default GeoService;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const getWindowHeight = (): number => {\r\n  return (\r\n    window.innerHeight ||\r\n    document.documentElement.clientHeight ||\r\n    document.body.clientHeight\r\n  );\r\n};\r\n\r\nexport const getWindowWidth = (): number => {\r\n  return (\r\n    window.innerWidth ||\r\n    document.documentElement.clientWidth ||\r\n    document.body.clientWidth\r\n  );\r\n};\r\n\r\nconst useWindowWidth = () => {\r\n  let [width, setWidth] = useState(getWindowWidth());\r\n  let [height, setHeight] = useState(getWindowHeight());\r\n\r\n  // in this case useEffect will execute only once because\r\n  // it does not have any dependencies.\r\n  useEffect(() => {\r\n    // timeoutId for debounce mechanism\r\n    let timeoutId: any = null;\r\n    const resizeListener = () => {\r\n      // prevent execution of previous setTimeout\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n      window.location.reload();\r\n      // change width from the state object after 150 milliseconds\r\n      timeoutId = setTimeout(() => {\r\n        setWidth(getWindowWidth());\r\n        setHeight(getWindowHeight());\r\n      }, 150);\r\n    };\r\n    // set resize listener\r\n    window.addEventListener(\"resize\", resizeListener);\r\n\r\n    // clean up function\r\n    return () => {\r\n      // remove resize listener\r\n      window.removeEventListener(\"resize\", resizeListener);\r\n    };\r\n  }, []);\r\n\r\n  return { width: width, height: height };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import React from \"react\";\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst SlideTransition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement;\r\n  },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default SlideTransition;","import React, { useRef, useEffect } from \"react\";\r\nimport { getWindowHeight, getWindowWidth } from \"hooks/useWindow\";\r\nimport SlideTransition from \"components/Shared/SlideTransition\";\r\n// Material UI\r\nimport Box from \"@mui/material/Box\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Breakpoint } from \"@mui/material\";\r\n/* \r\nExample Usage:\r\n\r\n\t<button onClick={() => openModal()}>Open modal</button>\r\n\t<Modal open={isModalOpen} onClose={() => closeModal()}>\r\n\t\t<h1>Modal title</h1>\r\n\t\t<p>hello</p>\r\n\t\t<p><button onClick={() => closeModal()}>Close</button></p>\r\n\t</Modal>\r\n*/\r\n\r\nconst ModalDialog = ({\r\n  title,\r\n  open,\r\n  onClose,\r\n  fullScreen = false,\r\n  maxWidth = \"sm\",\r\n  height,\r\n  contentPadding = 0,\r\n  children,\r\n}: {\r\n  title?: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  fullScreen?: boolean;\r\n  width?: number;\r\n  maxWidth?: Breakpoint;\r\n  height?: number;\r\n  contentPadding?: number;\r\n  children: any;\r\n}) => {\r\n  const modalDialogTopRef = useRef<any>(null);\r\n\r\n  const scrollContentIntoView = () => {\r\n    document.documentElement.scrollTop = 0;\r\n    setTimeout(() => {\r\n      const modalDialogTop = document.getElementById(\r\n        \"modal-dialog-content-top\"\r\n      );\r\n      if (modalDialogTop) {\r\n        modalDialogTop.scrollTo({ top: 0, behavior: \"smooth\" });\r\n        modalDialogTop.scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"start\",\r\n        });\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  const getModalHeight = (): string => {\r\n    if (fullScreen) {\r\n      return windowHeight + \"px\";\r\n    }\r\n    return height ? height.toString() : \"auto\";\r\n  };\r\n\r\n  const windowHeight = getWindowHeight();\r\n  const windowWidth = getWindowWidth();\r\n\r\n  const closeDialog = (e) => {\r\n    e.preventDefault();\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      scrollContentIntoView();\r\n    }\r\n  }, [open]);\r\n\r\n  if (open === false) return null;\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={fullScreen}\r\n      maxWidth={maxWidth}\r\n      scroll=\"paper\"\r\n      open={open}\r\n      onClose={closeDialog}\r\n      TransitionComponent={SlideTransition}\r\n      hideBackdrop={true}\r\n      PaperProps={{\r\n        style: {\r\n          zIndex: \"9999\",\r\n          position: \"absolute\",\r\n          top: fullScreen ? \"0\" : \"5%\",\r\n          left: fullScreen ? \"0\" : \"33%\",\r\n          height: getModalHeight(),\r\n          maxWidth: windowWidth + \"px !important\",\r\n          margin: 0,\r\n          color: \"text.default\",\r\n          backgroundColor: \"background.default\",\r\n          overflow: \"hidden\",\r\n        },\r\n      }}\r\n      sx={{\r\n        \"& .MuiModal-backdrop\": {\r\n          verticalAlign: \"top\",\r\n          backgroundColor: \"transparent\",\r\n        },\r\n        \"& .MuiDialog-paper\": {\r\n          boxShadow: \"2\",\r\n          border: 1,\r\n          borderColor: \"divider\",\r\n        },\r\n      }}\r\n    >\r\n      <AppBar\r\n        id=\"modal-dialog-content-top\"\r\n        ref={modalDialogTopRef}\r\n        sx={{\r\n          boxShadow: \"none\",\r\n          borderBottom: 1,\r\n          borderColor: \"divider\",\r\n          \"& .MuiToolbar-root\": {\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n          },\r\n          position: \"relative\",\r\n          backgroundColor: \"background.default\",\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"flex-start\",\r\n              padding: 0,\r\n              paddingLeft: 1,\r\n              paddingRight: 1,\r\n              flexGrow: 1,\r\n            }}\r\n          >\r\n            <Box sx={{ flexGrow: 1, padding: 1, fontSize: 20 }}>{title}</Box>\r\n            <IconButton\r\n              onClick={(e) => {\r\n                closeDialog(e);\r\n              }}\r\n              sx={{\r\n                padding: 1,\r\n              }}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <DialogContent\r\n        sx={{\r\n          padding: contentPadding,\r\n          paddingBottom: 4,\r\n          height: getModalHeight(),\r\n          maxWidth: windowWidth + \"px !important\",\r\n          overflowX: \"auto\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ModalDialog);\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nfunction GetStartedMessage({\r\n  displayGetStarted,\r\n  locData,\r\n}: {\r\n  displayGetStarted: boolean;\r\n  locData: any;\r\n}) {\r\n  if (displayGetStarted === false) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <p id=\"get-started-message\">\r\n          {locData.getstartedmessage}\r\n        </p>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default GetStartedMessage;\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// material-ui\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Grid from \"@mui/material/Grid\";\r\n// services\r\nimport AuthService from \"services/AuthService\";\r\nimport LocalizationService from \"services/LocalizationService\";\r\nimport GeoService from \"services/GeoService\";\r\nimport NotificationsService from \"services/NotificationsService\";\r\n// components\r\nimport ModalDialog from \"components/Shared/ModalDialog\";\r\nimport LoadingIndicator from \"components/Shared/LoadingIndicator\";\r\nimport GetStartedMessage from \"components/Home/GetStartedMessage\";\r\n\r\nfunction Home() {\r\n  const [userSignedIn, setUserSignedIn] = useState<boolean>(false);\r\n  const [locData, setLocData] = useState<Record<string, string>>({});\r\n  const [modalDemoState, setModalDemoState] = useState<boolean>(false);\r\n  const [userIpAddressState, setUserIpAddressState] = useState<string>(\"\");\r\n  const [isLoadingState, setIsLoadingState] = useState<boolean>(false);\r\n\r\n  const authService = useMemo(AuthService, []);\r\n  const localizationService = useMemo(LocalizationService, []);\r\n  const geoService = useMemo(GeoService, []);\r\n  const notificationsService = useMemo(NotificationsService, []);\r\n\r\n  useEffect(() => {\r\n    let userHasSignedIn = authService.userHasSignedIn();\r\n    setUserSignedIn(userHasSignedIn);\r\n  }, [authService]);\r\n\r\n  useEffect(() => {\r\n    async function loadLocalization() {\r\n      const locCode = localizationService.getUserLocale();\r\n      const locDataLoaded = await localizationService.getLocalizedTextSet(\r\n        [\r\n          \"welcome\",\r\n          \"homepagewelcome\",\r\n          \"aboutdescription\",\r\n          \"getstartedmessage\",\r\n          \"notifications\",\r\n          \"notificationsdescription\",\r\n          \"modals\",\r\n          \"modalsdescription\",\r\n          \"error\",\r\n          \"success\",\r\n          \"view\",\r\n          \"close\",\r\n          \"authenticatedcontent\",\r\n          \"authenticatedcontentdescription\",\r\n          \"services\",\r\n          \"serviceexampletitle\",\r\n          \"serviceexampledescription\",\r\n          \"forms\",\r\n          \"formsexample\",\r\n          \"formsexampledescription\",\r\n        ],\r\n        locCode\r\n      );\r\n      setLocData(locDataLoaded);\r\n    }\r\n    loadLocalization();\r\n  }, [localizationService]);\r\n\r\n  const showNotification = (message, type) => {\r\n    notificationsService.show(message, type);\r\n  };\r\n\r\n  const showIpAddressUsingHttpClient = async () => {\r\n    setUserIpAddressState(\"\");\r\n    setIsLoadingState(true);\r\n    await geoService.getCurrentIPAddress().then((response) => {\r\n      if (response && response.ip) {\r\n        setUserIpAddressState(response.message);\r\n        setIsLoadingState(false);\r\n      } else {\r\n        setUserIpAddressState(\"Error occurred\");\r\n        setIsLoadingState(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const IpAddressDisplay = () => {\r\n    if (!isLoadingState && userIpAddressState.length > 0) {\r\n      return <p className=\"mt-2\">{userIpAddressState}</p>;\r\n    } else {\r\n      return <LoadingIndicator loading={isLoadingState} size={20} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12} className=\"contentpanel-site\">\r\n        <h2>{locData.homepagewelcome}</h2>\r\n\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12}>\r\n            <GetStartedMessage locData={locData} displayGetStarted={true} />\r\n          </Grid>\r\n          <Grid item xs={12} className=\"pt-1\">\r\n            {userSignedIn && (\r\n              <Grid container>\r\n                <Grid item xs={12} className=\"pt-1\">\r\n                  <Card>\r\n                    <CardContent>\r\n                      <h4 className=\"card-title\">\r\n                        {locData.authenticatedcontent}\r\n                      </h4>\r\n                      <p>{locData.authenticatedcontentdescription}</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} className=\"pt-1 pb-1\">\r\n                <Card className=\"card bl-1 bb-1\">\r\n                  <CardContent>\r\n                    <h4 className=\"card-title\">{locData.notifications}</h4>\r\n                    <p>{locData.notificationsdescription}</p>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button\r\n                      className=\"ml-2\"\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      onClick={() =>\r\n                        showNotification(locData.success, \"success\")\r\n                      }\r\n                    >\r\n                      {locData.success}\r\n                    </Button>\r\n                    <Button\r\n                      className=\"ml-2\"\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => showNotification(locData.error, \"error\")}\r\n                    >\r\n                      {locData.error}\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} className=\"pt-1\">\r\n                <Card className=\"card bl-1 bb-1\">\r\n                  <CardContent>\r\n                    <h4 className=\"card-title\">{locData.modals}</h4>\r\n                    <p>{locData.modalsdescription}</p>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button\r\n                      className=\"ml-2\"\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => setModalDemoState(true)}\r\n                    >\r\n                      {locData.view}\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n\r\n                <ModalDialog\r\n                  title={locData.welcome}\r\n                  open={modalDemoState}\r\n                  onClose={() => setModalDemoState(false)}\r\n                >\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\", p: 2 }}>\r\n                    <Box sx={{ p: 2 }}>{locData.homepagewelcome}</Box>\r\n                    <Box sx={{ p: 2 }}>{locData.aboutdescription}</Box>\r\n                    <Box sx={{ p: 2 }}>\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        onClick={() => setModalDemoState(false)}\r\n                      >\r\n                        {locData.close}\r\n                      </Button>\r\n                    </Box>\r\n                  </Box>\r\n                </ModalDialog>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} className=\"pt-1\">\r\n                <Card className=\"card bl-1 bb-1\">\r\n                  <CardContent>\r\n                    <h4 className=\"card-title\">{locData.services}</h4>\r\n                    <p>{locData.serviceexampledescription}</p>\r\n                    <Button\r\n                      className=\"mt-3\"\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      onClick={showIpAddressUsingHttpClient}\r\n                    >\r\n                      {locData.serviceexampletitle}\r\n                    </Button>\r\n                    <IpAddressDisplay />\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} className=\"pt-1\">\r\n                <Card>\r\n                  <CardContent>\r\n                    <h4 className=\"card-title\">{locData.forms}</h4>\r\n                    <p>{locData.formsexampledescription}</p>\r\n                    <Button\r\n                      className=\"mt-3\"\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      component={Link}\r\n                      to=\"/contact/testnameparam\"\r\n                    >\r\n                      {locData.formsexample}\r\n                    </Button>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useSnackbar, VariantType } from \"notistack\";\r\n\r\n/* Notifications Service - encapsulates collection of \"Toast\" style \r\nmessages of given type (eg success, warning, error) \r\n\r\nNOTE: Assumes setup of notistack SnackbarProvider at the application level\r\n*/\r\nconst NotificationsService = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const show = (msg: string, type?: string) => {\r\n    addNotification(msg, type ? (type as VariantType) : \"success\");\r\n  };\r\n\r\n  const success = (msg: string) => {\r\n    addNotification(msg, \"success\");\r\n  };\r\n\r\n  const error = (msg: string) => {\r\n    addNotification(msg, \"error\");\r\n  };\r\n\r\n  const info = (msg: string) => {\r\n    addNotification(msg, \"info\");\r\n  };\r\n\r\n  const addNotification = (msg: string, type: VariantType) => {\r\n    // variant can be success, error, warning, info, or default\r\n    enqueueSnackbar(msg, { variant: type });\r\n  };\r\n\r\n  return {\r\n    show,\r\n    success,\r\n    error,\r\n    info,\r\n  };\r\n};\r\n\r\nexport default NotificationsService;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["HttpClient","fetchResponseHandler","response","ok","json","then","Promise","resolve","data","code","status","catch","statusText","error","message","getData","async","fetch","url","method","headers","Accept","getDataAuthenticated","token","Authorization","postData","arguments","length","undefined","postHeaders","body","JSON","stringify","GeoService","getCurrentIPAddress","client","geoResult","ip","city","region","country","latitude","longitude","concat","getWindowHeight","window","innerHeight","document","documentElement","clientHeight","getWindowWidth","innerWidth","clientWidth","React","props","ref","_jsx","Slide","direction","ModalDialog","_ref","title","open","onClose","fullScreen","maxWidth","height","contentPadding","children","modalDialogTopRef","useRef","getModalHeight","windowHeight","toString","windowWidth","closeDialog","e","preventDefault","useEffect","scrollTop","setTimeout","modalDialogTop","getElementById","scrollTo","top","behavior","scrollIntoView","block","_jsxs","Dialog","scroll","TransitionComponent","SlideTransition","hideBackdrop","PaperProps","style","zIndex","position","left","margin","color","backgroundColor","overflow","sx","verticalAlign","boxShadow","border","borderColor","AppBar","id","borderBottom","paddingLeft","paddingRight","Toolbar","Box","display","flexDirection","alignItems","padding","flexGrow","fontSize","IconButton","onClick","CloseIcon","DialogContent","paddingBottom","overflowX","overflowY","displayGetStarted","locData","_Fragment","Grid","container","spacing","item","xs","getstartedmessage","userSignedIn","setUserSignedIn","useState","setLocData","modalDemoState","setModalDemoState","userIpAddressState","setUserIpAddressState","isLoadingState","setIsLoadingState","authService","useMemo","AuthService","localizationService","LocalizationService","geoService","notificationsService","NotificationsService","userHasSignedIn","locCode","getUserLocale","locDataLoaded","getLocalizedTextSet","loadLocalization","showNotification","type","show","IpAddressDisplay","className","LoadingIndicator","loading","size","homepagewelcome","GetStartedMessage","Card","CardContent","authenticatedcontent","authenticatedcontentdescription","notifications","notificationsdescription","CardActions","Button","variant","success","modals","modalsdescription","view","welcome","p","aboutdescription","close","services","serviceexampledescription","serviceexampletitle","forms","formsexampledescription","component","Link","to","formsexample","enqueueSnackbar","useSnackbar","addNotification","msg","info","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","styles","ownerState","root","disableSpacing","_extends","marginLeft","inProps","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","getCardContentUtilityClass","CardContentRoot","as","getCardUtilityClass","CardRoot","Paper","raised","elevation"],"sourceRoot":""}