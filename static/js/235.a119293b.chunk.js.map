{"version":3,"file":"static/js/235.a119293b.chunk.js","mappings":"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","sources":["pages/Settings.tsx","services/NotificationsService.ts","../node_modules/@mui/icons-material/Check.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\r\nimport { capitalize, reloadWindow } from \"utils\";\r\nimport { colors } from \"styling/colors\";\r\nimport { DEFAULT_COLOR_SETTING } from \"styling/theming\";\r\n// Material UI\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\n// Icons\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\n// Services\r\nimport LocalizationService from \"services/LocalizationService\";\r\nimport LocalCacheService from \"services/LocalCacheService\";\r\nimport NotificationsService from \"services/NotificationsService\";\r\n\r\nfunction Settings() {\r\n  const [locData, setLocData] = useState<Record<string, string>>({});\r\n  const [settingsState, setSettingsState] = useState<string>(\r\n    DEFAULT_COLOR_SETTING\r\n  );\r\n\r\n  const localizationService = useMemo(LocalizationService, []);\r\n  const localCacheService = useMemo(LocalCacheService, []);\r\n  const notificationsService = useMemo(NotificationsService, []);\r\n\r\n  useEffect(() => {\r\n    async function loadLocalization() {\r\n      const locCode = localizationService.getUserLocale();\r\n      const locDataLoaded = await localizationService.getLocalizedTextSet(\r\n        [\"settings\", \"settingscolor\", \"settingsdescription\", \"success\"],\r\n        locCode\r\n      );\r\n      setLocData(locDataLoaded);\r\n    }\r\n    loadLocalization();\r\n  }, [localizationService, localCacheService]);\r\n\r\n  useEffect(() => {\r\n    let colorSetting = localCacheService.get(\"color\", DEFAULT_COLOR_SETTING);\r\n\r\n    setSettingsState(colorSetting);\r\n  }, [localCacheService]);\r\n\r\n  const setColor = (color) => {\r\n    localCacheService.set(\"color\", color);\r\n    setSettingsState(color);\r\n    showNotification(locData.success, \"success\");\r\n    reloadWindow();\r\n  };\r\n\r\n  const showNotification = (message, type) => {\r\n    notificationsService.show(message, type);\r\n  };\r\n\r\n  const ColorButtons = () => {\r\n    let colorsArray: any = [];\r\n    for (const [key, value] of Object.entries(colors)) {\r\n      colorsArray.push({ colorName: key, colors: value });\r\n    }\r\n\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          maxWidth: window.innerWidth,\r\n        }}\r\n      >\r\n        {colorsArray.map((colorObj) => {\r\n          return (\r\n            <ColorButton\r\n              key={colorObj.colorName}\r\n              colorName={colorObj.colorName}\r\n              colors={colorObj.colors}\r\n            />\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const ColorButton = ({ colorName, colors }) => {\r\n    let colorHex = colors[800];\r\n\r\n    return (\r\n      <Button\r\n        style={{\r\n          display: \"flex\",\r\n          width: 140,\r\n          minWidth: 140,\r\n          backgroundColor: colorHex,\r\n          color: \"#ffffff\",\r\n          borderColor: \" tranparent\",\r\n        }}\r\n        title={\"Set color to \" + colorName}\r\n        onClick={() => setColor(colorName)}\r\n      >\r\n        {settingsState === colorName ? (\r\n          <CheckIcon sx={{ marginRight: 1 }} />\r\n        ) : undefined}\r\n        {capitalize(colorName)}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      className=\"scrollable\"\r\n      style={{\r\n        height: window.innerHeight,\r\n        marginTop: \"20px\",\r\n      }}\r\n    >\r\n      <Card>\r\n        <CardContent className=\"main-contentgrid p-0 m-0\">\r\n          <h3>{locData.settings}</h3>\r\n\r\n          <Card>\r\n            <CardContent>\r\n              <h4 className=\"card-title\">{locData.settingscolor}</h4>\r\n              <p className=\"card-text\">{locData.settingsdescription}</p>\r\n            </CardContent>\r\n            <CardActions>\r\n              <ColorButtons />\r\n            </CardActions>\r\n          </Card>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import { useSnackbar, VariantType } from \"notistack\";\r\n\r\n/* Notifications Service - encapsulates collection of \"Toast\" style \r\nmessages of given type (eg success, warning, error) \r\n\r\nNOTE: Assumes setup of notistack SnackbarProvider at the application level\r\n*/\r\nconst NotificationsService = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const show = (msg: string, type?: string) => {\r\n    addNotification(msg, type ? (type as VariantType) : \"success\");\r\n  };\r\n\r\n  const success = (msg: string) => {\r\n    addNotification(msg, \"success\");\r\n  };\r\n\r\n  const error = (msg: string) => {\r\n    addNotification(msg, \"error\");\r\n  };\r\n\r\n  const info = (msg: string) => {\r\n    addNotification(msg, \"info\");\r\n  };\r\n\r\n  const addNotification = (msg: string, type: VariantType) => {\r\n    // variant can be success, error, warning, info, or default\r\n    enqueueSnackbar(msg, { variant: type });\r\n  };\r\n\r\n  return {\r\n    show,\r\n    success,\r\n    error,\r\n    info,\r\n  };\r\n};\r\n\r\nexport default NotificationsService;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["locData","setLocData","useState","settingsState","setSettingsState","DEFAULT_COLOR_SETTING","localizationService","useMemo","LocalizationService","localCacheService","LocalCacheService","notificationsService","NotificationsService","useEffect","async","locCode","getUserLocale","locDataLoaded","getLocalizedTextSet","loadLocalization","colorSetting","get","showNotification","message","type","show","ColorButtons","colorsArray","key","value","Object","entries","colors","push","colorName","_jsx","Box","sx","display","flexWrap","maxWidth","window","innerWidth","children","map","colorObj","ColorButton","_ref","colorHex","_jsxs","Button","style","width","minWidth","backgroundColor","color","borderColor","title","onClick","setColor","set","success","reloadWindow","CheckIcon","marginRight","undefined","capitalize","Grid","item","xs","className","height","innerHeight","marginTop","Card","CardContent","settings","settingscolor","settingsdescription","CardActions","enqueueSnackbar","useSnackbar","addNotification","msg","variant","error","info","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_extends","alignItems","padding","marginLeft","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","getCardContentUtilityClass","CardContentRoot","paddingBottom","component","as","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation"],"sourceRoot":""}